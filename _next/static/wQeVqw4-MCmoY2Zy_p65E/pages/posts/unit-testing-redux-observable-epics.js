(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{IP0w:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/unit-testing-redux-observable-epics",function(){var e=a("e1Bw");return{page:e.default||e}}])},e1Bw:function(e,t,a){"use strict";a.r(t);var l=a("q1tI"),n=a.n(l),s=a("JRaF"),r=(a("YFqc"),{url:"unit-testing-redux-observable-epics",id:"reduxobservabletesting",type:"post",title:"Unit testing Redux-observable epics",date:"2019-08-26",tags:["redux","redux-observable","testing","jest","typescript"],author:"david",excerpt:"Demonstrating a convenient helper method and pattern for unit testing Redux observable epics",folder:"/Users/davidwaller/gitreps/mine/blog2/sources/2019-08-25_test_redux_obs",hasStaticContent:!1,headlines:[{level:3,text:"Premise",id:"premise"},{level:3,text:"Crash test dummy",id:"crash-test-dummy"},{level:3,text:"Using the helper",id:"using-the-helper"},{level:3,text:"Applying the helper",id:"applying-the-helper"},{level:4,text:"_Arranging_ the test",id:"-arranging-the-test"},{level:4,text:"_Acting_ out the test",id:"-acting-out-the-test"},{level:4,text:"_Asserting_ things went ok",id:"-asserting-things-went-ok"},{level:3,text:"Helper source code",id:"helper-source-code"},{level:3,text:"Wrapping up",id:"wrapping-up"}]});t.default=function(){return n.a.createElement(s.a,{kind:"post",data:r,title:"Unit testing Redux-observable epics",summary:"Demonstrating a convenient helper method and pattern for unit testing Redux observable epics",headlines:[{level:3,text:"Premise",id:"premise"},{level:3,text:"Crash test dummy",id:"crash-test-dummy"},{level:3,text:"Using the helper",id:"using-the-helper"},{level:3,text:"Applying the helper",id:"applying-the-helper"},{level:4,text:"_Arranging_ the test",id:"-arranging-the-test"},{level:4,text:"_Acting_ out the test",id:"-acting-out-the-test"},{level:4,text:"_Asserting_ things went ok",id:"-asserting-things-went-ok"},{level:3,text:"Helper source code",id:"helper-source-code"},{level:3,text:"Wrapping up",id:"wrapping-up"}],tags:["redux","redux-observable","testing","jest","typescript"]},n.a.createElement("div",{className:"post","data-postid":"reduxobservabletesting"},n.a.createElement("h3",{id:"premise"},"Premise"),n.a.createElement("p",null,"There are many different libraries for dealing with side effects in Redux. Right now my favourite is ",n.a.createElement("a",{href:"https://redux-observable.js.org/"},n.a.createElement("code",null,"redux-observable"))," - the price of admission can be high since you need to buy into ",n.a.createElement("a",{href:"https://rxjs.dev/"},"RxJS")," and reactive programming, but once you're in the sailing is really smooth!"),n.a.createElement("p",null,"However, I initially had some troubles writing unit tests that I felt at ease with. The official docs didn't help me much, and marble testing just felt like another layer without any real benefits."),n.a.createElement("p",null,"After trying some different approaches I ended up with a rather simple helper, which will be introduced in this post!"),n.a.createElement("h3",{id:"crash-test-dummy"},"Crash test dummy"),n.a.createElement("p",null,"First we invent an imaginary epic to test! Say we have a Redux-controlled form where the user has rated something. A big button at the bottom will dispatch a ",n.a.createElement("code",null,"submitRating")," action. Our epic now needs to..."),n.a.createElement("ol",null,n.a.createElement("li",null,"act on those actions"),n.a.createElement("li",null,"get the movieId from state (because the rating component doesn't know it)"),n.a.createElement("li",null,"make a request to a service"),n.a.createElement("li",null,"dispatch a success/fail action")),n.a.createElement("p",null,"Such an epic could look something like this:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"const")," submitRatingEpic: AppEpic = ",n.a.createElement("span",{className:"hljs-function"},"(",n.a.createElement("span",{className:"hljs-params"},"action$, state$, deps"),") =>"),n.a.createElement("br",null),"  action$.pipe(",n.a.createElement("br",null),"    filter(isSubmitRatingStartAction),",n.a.createElement("br",null),"    withLatestFrom(state$),",n.a.createElement("br",null),"    switchMap(",n.a.createElement("span",{className:"hljs-function"},"(",n.a.createElement("span",{className:"hljs-params"},"[action, state]"),") =>"),n.a.createElement("br",null),"      ",n.a.createElement("span",{className:"hljs-keyword"},"from"),"(",n.a.createElement("br",null),"        deps",n.a.createElement("br",null),"          .submitRating(state.ui.currentMovieId, action.rating)",n.a.createElement("br",null),"          .then(",n.a.createElement("span",{className:"hljs-function"},n.a.createElement("span",{className:"hljs-params"},"res")," =>")," [",n.a.createElement("span",{className:"hljs-literal"},"null"),", res])",n.a.createElement("br",null),"          .catch(",n.a.createElement("span",{className:"hljs-function"},n.a.createElement("span",{className:"hljs-params"},"err")," =>")," [err, ",n.a.createElement("span",{className:"hljs-literal"},"null"),"])",n.a.createElement("br",null),"      )",n.a.createElement("br",null),"    ),",n.a.createElement("br",null),"    map(",n.a.createElement("span",{className:"hljs-function"},"(",n.a.createElement("span",{className:"hljs-params"},"[err, res]"),") =>"),n.a.createElement("br",null),"      err ? submitRatingError(err) : submitRatingFinish(res)",n.a.createElement("br",null),"    )",n.a.createElement("br",null),"  );")),n.a.createElement("p",null,"For TypeScript users; my ",n.a.createElement("code",null,"AppEpic")," type is a simple helper type looking something like this:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"import")," { Epic } ",n.a.createElement("span",{className:"hljs-keyword"},"from")," ",n.a.createElement("span",{className:"hljs-string"},'"redux-observable"'),";",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"import")," {",n.a.createElement("br",null),"  AppAction, ",n.a.createElement("span",{className:"hljs-comment"},"// a union of all action types"),n.a.createElement("br",null),"  AppState, ",n.a.createElement("span",{className:"hljs-comment"},"// typings for the full"),n.a.createElement("br",null),"  EpicDeps ",n.a.createElement("span",{className:"hljs-comment"},"// the dependency object given to all epics"),n.a.createElement("br",null),"} ",n.a.createElement("span",{className:"hljs-keyword"},"from")," ",n.a.createElement("span",{className:"hljs-string"},'"../types"'),";",n.a.createElement("br",null),n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"export")," ",n.a.createElement("span",{className:"hljs-keyword"},"type")," AppEpic = Epic<AppAction, AppAction, AppState, EpicDeps>;")),n.a.createElement("p",null,"The contents of the ",n.a.createElement("code",null,"AppAction")," union are all extensions of a basic ",n.a.createElement("code",null,"Action")," type:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"type")," Action<T ",n.a.createElement("span",{className:"hljs-keyword"},"extends")," ",n.a.createElement("span",{className:"hljs-built_in"},"string"),", P> = {",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"type"),": T;",n.a.createElement("br",null),"  payload: P;",n.a.createElement("br",null),"};")),n.a.createElement("h3",{id:"using-the-helper"},"Using the helper"),n.a.createElement("p",null,"To write tests we need to be able to do the following:"),n.a.createElement("ul",null,n.a.createElement("li",null,"emit on ",n.a.createElement("code",null,"action$")),n.a.createElement("li",null,"emit on ",n.a.createElement("code",null,"state$")),n.a.createElement("li",null,"provide dependencies"),n.a.createElement("li",null,"see what the epic emits at any point in time")),n.a.createElement("p",null,"The helper does exactly this with a very simple API - you simply call a ",n.a.createElement("code",null,"testEpic")," function, typically once per unit test:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"const")," {",n.a.createElement("br",null),"  emitAction, ",n.a.createElement("span",{className:"hljs-comment"},"// will emit to action$"),n.a.createElement("br",null),"  emitState, ",n.a.createElement("span",{className:"hljs-comment"},"// will emit to state$"),n.a.createElement("br",null),"  epicEmissions ",n.a.createElement("span",{className:"hljs-comment"},"// a mutating array of emissions from the epic"),n.a.createElement("br",null),"} = testEpic(submitRatingEpic, fakeDeps);")),n.a.createElement("p",null,"A test would then typically look something like this:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-comment"},"// act"),n.a.createElement("br",null),"emitState(someFakeState);",n.a.createElement("br",null),"emitAction(someFakeAction);",n.a.createElement("br",null),n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-comment"},"// assert"),n.a.createElement("br",null),"expect(epicEmissions).toHaveLength(",n.a.createElement("span",{className:"hljs-number"},"1"),");",n.a.createElement("br",null),"expect(isSomeAction(epicEmissions[",n.a.createElement("span",{className:"hljs-number"},"0"),"])).toBe(",n.a.createElement("span",{className:"hljs-literal"},"true"),");",n.a.createElement("br",null),"expect(epicEmissions[",n.a.createElement("span",{className:"hljs-number"},"0"),"].payload).toEqual(expectedPayload);")),n.a.createElement("h3",{id:"applying-the-helper"},"Applying the helper"),n.a.createElement("p",null,"Let's examing what this would look like when testing ",n.a.createElement("code",null,"submitRatingEpic"),"!"),n.a.createElement("h4",{id:"arranging-the-test"},n.a.createElement("em",null,"Arranging")," the test"),n.a.createElement("p",null,"First we do some setup! We need..."),n.a.createElement("ol",null,n.a.createElement("li",null,n.a.createElement("p",null,"a fake service:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"const")," fakeReply = { fake: ",n.a.createElement("span",{className:"hljs-string"},'"reply"')," };",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"const")," fakeService = jest.fn(",n.a.createElement("span",{className:"hljs-function"},"() =>")," ",n.a.createElement("span",{className:"hljs-built_in"},"Promise"),".resolve(fakeReply));",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"const")," fakeDeps: Partial<EpicDeps> = {",n.a.createElement("br",null),"  submitRating: fakeService",n.a.createElement("br",null),"};"))),n.a.createElement("li",null,n.a.createElement("p",null,"some fake data:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"const")," fakeMovieId = ",n.a.createElement("span",{className:"hljs-string"},'"FAKE_MOVIE_ID"'),";",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"const")," fakeRating = ",n.a.createElement("span",{className:"hljs-number"},"666"),";",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"const")," defaultAppState = getDefaultAppState();",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"const")," fakeAppState = {",n.a.createElement("br",null),"  ...defaultAppState,",n.a.createElement("br",null),"  ui: {",n.a.createElement("br",null),"    ...defaultAppState.ui,",n.a.createElement("br",null),"    currentMovieId: fakeMovieId",n.a.createElement("br",null),"  }",n.a.createElement("br",null),"};"))),n.a.createElement("li",null,n.a.createElement("p",null,"an epic instance to test! This is where our helper method comes into play:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"const")," { epicEmissions, emitState, emitAction } = testEpic(",n.a.createElement("br",null),"  submitRatingEpic,",n.a.createElement("br",null),"  fakeDeps",n.a.createElement("br",null),");")))),n.a.createElement("h4",{id:"acting-out-the-test"},n.a.createElement("em",null,"Acting")," out the test"),n.a.createElement("p",null,"Now to finally make stuff happen! We need to..."),n.a.createElement("ol",null,n.a.createElement("li",null,n.a.createElement("p",null,"emit our fake state with the fakeMovieId:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},"emitState(fakeAppState);"))),n.a.createElement("li",null,n.a.createElement("p",null,"emit the action that we want to see the epic react to:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},"emitAction(submitRatingStart(fakeRating));")),n.a.createElement("p",null,"Here ",n.a.createElement("code",null,"submitRatingStart")," is a simple action creator. We could of course also inline an object literal, but using the action creators that we already have makes the test more readable!"))),n.a.createElement("p",null,"Note that the order here matters - since the epic will fetch the current movie id from the current state, that state needs to already be there when the action triggers the epic."),n.a.createElement("h4",{id:"asserting-things-went-ok"},n.a.createElement("em",null,"Asserting")," things went ok"),n.a.createElement("p",null,"The final piece of the puzzle is to make assertions against ",n.a.createElement("code",null,"epicEmissions"),", to test that the epic has emitted the correct action:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},"expect(epicEmissions).toHaveLength(",n.a.createElement("span",{className:"hljs-number"},"1"),");",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"const")," action = epicEmissions[",n.a.createElement("span",{className:"hljs-number"},"0"),"];",n.a.createElement("br",null),"expect(isSubmitRatingFinish(action)).toBe(",n.a.createElement("span",{className:"hljs-literal"},"true"),");",n.a.createElement("br",null),"expect(action.payload).toEqual({",n.a.createElement("br",null),"  movieId: fakeMovieId,",n.a.createElement("br",null),"  rating: fakeRating",n.a.createElement("br",null),"});")),n.a.createElement("p",null,"No need for cumbersome subscriptions to throwaway observables, or any such shenanigans. Simply inspect the contents of ",n.a.createElement("code",null,"epicEmissions"),"!"),n.a.createElement("p",null,"For more complex tests we might do more state and/or action emissions, and test the contents of ",n.a.createElement("code",null,"epicEmissions")," at several points during that."),n.a.createElement("h3",{id:"helper-source-code"},"Helper source code"),n.a.createElement("p",null,"There isn't much to the source of the helper! It mainly consists of instantiating fake ",n.a.createElement("code",null,"ActionsObservable")," and ",n.a.createElement("code",null,"StateObservable")," that ",n.a.createElement("code",null,"redux-observable")," will use to create ",n.a.createElement("code",null,"action$")," and ",n.a.createElement("code",null,"state$")," for the individual epics."),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-typescript"},n.a.createElement("span",{className:"hljs-keyword"},"import")," { Subject } ",n.a.createElement("span",{className:"hljs-keyword"},"from")," ",n.a.createElement("span",{className:"hljs-string"},'"rxjs"'),";",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"import")," { ActionsObservable, StateObservable, Epic } ",n.a.createElement("span",{className:"hljs-keyword"},"from")," ",n.a.createElement("span",{className:"hljs-string"},'"redux-observable"'),";",n.a.createElement("br",null),n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"export")," ",n.a.createElement("span",{className:"hljs-keyword"},"const")," testEpic = <A ",n.a.createElement("span",{className:"hljs-keyword"},"extends")," Action<",n.a.createElement("span",{className:"hljs-built_in"},"string"),", ",n.a.createElement("span",{className:"hljs-built_in"},"any"),">, S, D>(",n.a.createElement("br",null),"  epic: Epic<A, A, S, D>, ",n.a.createElement("span",{className:"hljs-comment"},"// A, S, D will be inferred from here"),n.a.createElement("br",null),"  deps: Partial<D> = ",n.a.createElement("span",{className:"hljs-function"},"(",n.a.createElement("span",{className:"hljs-params"},"{} ",n.a.createElement("span",{className:"hljs-keyword"},"as")," unknown"),") ",n.a.createElement("span",{className:"hljs-params"},"as")," ",n.a.createElement("span",{className:"hljs-params"},"D"),n.a.createElement("br",null),") =>")," {",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," actionSubject = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," Subject<A>();",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," action$ = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," ActionsObservable(actionSubject);",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," emitAction = actionSubject.next.bind(actionSubject);",n.a.createElement("br",null),n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," stateSubject = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," Subject<S>();",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," state$ = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," StateObservable(stateSubject, (",n.a.createElement("span",{className:"hljs-literal"},"null")," ",n.a.createElement("span",{className:"hljs-keyword"},"as")," unknown) ",n.a.createElement("span",{className:"hljs-keyword"},"as")," S);",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," emitState = stateSubject.next.bind(stateSubject);",n.a.createElement("br",null),n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," epicEmissions: A[] = [];",n.a.createElement("br",null),"  epic(action$, state$, deps ",n.a.createElement("span",{className:"hljs-keyword"},"as")," D).subscribe(",n.a.createElement("span",{className:"hljs-function"},n.a.createElement("span",{className:"hljs-params"},"e")," =>")," epicEmissions.push(e));",n.a.createElement("br",null),n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"return")," { emitAction, emitState, epicEmissions };",n.a.createElement("br",null),"};")),n.a.createElement("p",null,"The regular JS versions for the non-enlightened:"),n.a.createElement("pre",null,n.a.createElement("code",{className:"hljs language-javascript"},n.a.createElement("span",{className:"hljs-keyword"},"import")," { Subject } ",n.a.createElement("span",{className:"hljs-keyword"},"from")," ",n.a.createElement("span",{className:"hljs-string"},'"rxjs"'),";",n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"import")," { ActionsObservable, StateObservable } ",n.a.createElement("span",{className:"hljs-keyword"},"from")," ",n.a.createElement("span",{className:"hljs-string"},'"redux-observable"'),";",n.a.createElement("br",null),n.a.createElement("br",null),n.a.createElement("span",{className:"hljs-keyword"},"export")," ",n.a.createElement("span",{className:"hljs-keyword"},"const")," testEpic = ",n.a.createElement("span",{className:"hljs-function"},"(",n.a.createElement("span",{className:"hljs-params"},"epic, deps = {}"),") =>")," {",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," actionSubject = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," Subject();",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," action$ = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," ActionsObservable(actionSubject);",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," emitAction = actionSubject.next.bind(actionSubject);",n.a.createElement("br",null),n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," stateSubject = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," Subject();",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," state$ = ",n.a.createElement("span",{className:"hljs-keyword"},"new")," StateObservable(stateSubject, ",n.a.createElement("span",{className:"hljs-literal"},"null"),");",n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," emitState = stateSubject.next.bind(stateSubject);",n.a.createElement("br",null),n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"const")," epicEmissions = [];",n.a.createElement("br",null),"  epic(action$, state$, deps).subscribe(",n.a.createElement("span",{className:"hljs-function"},n.a.createElement("span",{className:"hljs-params"},"e")," =>")," epicEmissions.push(e));",n.a.createElement("br",null),n.a.createElement("br",null),"  ",n.a.createElement("span",{className:"hljs-keyword"},"return")," { emitAction, emitState, epicEmissions };",n.a.createElement("br",null),"};")),n.a.createElement("h3",{id:"wrapping-up"},"Wrapping up"),n.a.createElement("p",null,"For me, exchanging marble testing and my other convoluted attempts for this helper made my epic tests aeons easier to read, write and maintain. My hope is that you will have the same experience!")),n.a.createElement("hr",null))}}},[["IP0w",1,0]]]);